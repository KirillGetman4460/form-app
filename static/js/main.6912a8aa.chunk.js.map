{"version":3,"sources":["componets/header.jsx","componets/login.jsx","componets/registerMessage.jsx","componets/register.jsx","componets/user.jsx","componets/wrapper.jsx","App.jsx","store/store.js","index.js"],"names":["Header","className","to","activeClassName","Login","useForm","register","handleSubmit","errors","formState","dispatch","useDispatch","useState","JSON","parse","localStorage","getItem","user","errorMessage","setErrorMessage","history","useHistory","id","onSubmit","data","name","password","type","payload","push","go","placeholder","required","pattern","email","minLength","form","RegisterMessage","Register","repeatPassword","setPasswordRepeat","registerMessage","setRegisterMessage","passwordTest","setPassword","onChange","e","target","value","validate","confirmPassword","User","onClick","Wrapper","auth","setAuth","useEffect","Object","keys","length","exact","path","App","defaultState","activeUser","store","createStore","state","action","setItem","stringify","removeItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6912a8aa.chunk.js","sourcesContent":["import {NavLink} from \"react-router-dom\";\r\nconst Header = ()=>{\r\n    return (\r\n        <div className=\"header\">\r\n            <NavLink  to=\"/login\" className=\"link \" activeClassName=\"active__link\">\r\n                Login\r\n            </NavLink>\r\n            <NavLink  to=\"/register\" className=\"link \" activeClassName=\"active__link\">\r\n                Register\r\n            </NavLink>\r\n        </div>\r\n    )\r\n};\r\nexport default Header;","import React,{useState} from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux'\r\nconst Login = ()=>{\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const[user,setUser] = useState(JSON.parse(localStorage.getItem(\"user\")))\r\n\r\n    const [errorMessage,setErrorMessage] = useState(false)\r\n\r\n    const history = useHistory()\r\n\r\n    const onSubmit = data => {\r\n        if(user){\r\n            if(data.name === user.name && data.password === user.password) {\r\n                setErrorMessage(false)\r\n                dispatch({type:\"active_user\",payload:true})\r\n                history.push('/user')\r\n                history.go(0)\r\n                return;\r\n            }\r\n            dispatch({type:\"active_user\",payload:false})    \r\n        } \r\n        setErrorMessage(true)\r\n    };\r\n    return (\r\n        <div className=\"login\">\r\n            <h1 className=\"title\">Login</h1>\r\n            <form id=\"hook-form\" onSubmit={handleSubmit(onSubmit)} className=\"login__form\">\r\n                 <label className=\"login__name__label\">\r\n                    <input type=\"text\" placeholder=\"Full Name\" className={errors.name?.type === 'required' ? \"login__name__empty\":null}\r\n                        {...register(\"name\", {\r\n                        required: true,\r\n                        pattern: /^[A-Za-z]+$/i})}\r\n                    /> \r\n                    {errors.name?.type === 'required' && <span className=\"error__message\">Name is required</span>} \r\n                    {errors.name?.type === 'pattern' && <span className=\"error__message\">English only and characters only</span>}\r\n                    {errorMessage ? <span className=\"error__message\">The username or password you entered is incorrect</span>:null} \r\n                 </label>  \r\n\r\n                 <label className=\"login__email__label\">\r\n                    <input {...register(\"email\", { \r\n                        pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n                        required: true                \r\n                    })} placeholder=\"Email Address\" className={errors.name?.type === 'required' ? \"login__email__empty\":null}/> \r\n                    {errors.email?.type === 'required' && <span className=\"error__message\">Email is required</span>} \r\n                    {errors.email?.type === 'pattern' && <span className=\"error__message\">English only and characters only</span>}  \r\n                </label>  \r\n\r\n                <label className=\"login__password__label\">\r\n                    <input {...register(\"password\", { \r\n                        minLength:6,\r\n                        required: true                \r\n                    })} placeholder=\"Password\" \r\n                        type=\"password\"\r\n                        className={errors.password?.type === 'required' ? \"login__password__empty\":null}/>  \r\n                     {errors.password?.type === 'required' && <span className=\"error__message\">Password is required</span>} \r\n                     {errors.password?.type === 'minLength' && <span className=\"error__message\">Min length password 8</span>} \r\n                     {errorMessage ? <span className=\"error__message\">Wrong password</span>:null} \r\n                </label>  \r\n\r\n                <button type=\"submit\" form=\"hook-form\" className=\"login__btn__submit\">\r\n                    Login\r\n                </button>\r\n                \r\n            </form>\r\n            </div>\r\n    )\r\n}\r\nexport default Login;","import {Link} from \"react-router-dom\";\r\nconst RegisterMessage = () =>{\r\n    return (\r\n        <div className=\"regiter__message\">     \r\n            <span className=\"register__message__title\">\r\n                You have successfully Registered\r\n            </span>\r\n            <Link to=\"/login\" className=\"register__message__bnt\">\r\n                OK\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\nexport default RegisterMessage;","import React,{useState} from 'react';\r\nimport RegisterMessage from './registerMessage';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst Register = ()=>{\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const[repeatPassword,setPasswordRepeat] = useState(false);\r\n\r\n    const [registerMessage,setRegisterMessage] = useState(false);\r\n\r\n    const [passwordTest,setPassword] = useState('');\r\n\r\n    const onSubmit = data => { \r\n        setRegisterMessage(true)\r\n        dispatch({type:\"set_user\",payload:data})\r\n    };\r\n    return (\r\n        \r\n        <div className=\"login\">\r\n            {registerMessage ? <RegisterMessage/> : \r\n            <div>\r\n            <h1 className=\"title\">Register</h1>\r\n            <form id=\"hook-form\" onSubmit={handleSubmit(onSubmit)} className=\"login__form\">\r\n                 <label className=\"login__name__label\">\r\n                    <input type=\"text\" placeholder=\"Full Name\" className={errors.name?.type === 'required' ? \"login__name__empty\":null}\r\n                        {...register(\"name\", {\r\n                        required: true,\r\n                        pattern: /^[A-Za-z]+$/i})}\r\n                    /> \r\n                    {errors.name?.type === 'required' && <span className=\"error__message\">Name is required</span>} \r\n                    {errors.name?.type === 'pattern' && <span className=\"error__message\">English only and characters only</span>} \r\n                 </label>  \r\n\r\n                 <label className=\"login__email__label\">\r\n                    <input {...register(\"email\", { \r\n                        pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n                        required: true                \r\n                    })} placeholder=\"Email Address\" className={errors.name?.type === 'required' ? \"login__email__empty\":null}/> \r\n                    {errors.email?.type === 'required' && <span className=\"error__message\">Email is required</span>} \r\n                    {errors.email?.type === 'pattern' && <span className=\"error__message\">English only and characters only</span>}  \r\n                </label>  \r\n\r\n                <label className=\"login__password__label\">\r\n                    <input {...register(\"password\", { \r\n                        minLength:6,\r\n                        required: true                    \r\n                    })}     \r\n        \r\n                        placeholder=\"Password\" \r\n                        type=\"password\"\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        className={errors.password?.type === 'required' ? \"login__password__empty\":null}/>  \r\n                        {errors.password?.type === 'required' && <span className=\"error__message\">Password is required</span>} \r\n                        {errors.password?.type === 'minLength' && <span className=\"error__message\">Min length password 8</span>} \r\n                </label>  \r\n                <label className=\"login__repeat__label\">\r\n                    <input {...register(\"confirmPassword\", { \r\n                        minLength:6,\r\n                        required: true,\r\n                        validate: value=>{\r\n                            value === passwordTest ? setPasswordRepeat(false):setPasswordRepeat(true)\r\n                        }     \r\n                    })} placeholder=\"Confirm password\" \r\n                        type=\"password\"\r\n                        className={errors.password?.type === 'required' ? \"login__password__empty\":null}  \r\n                        />  \r\n                        {errors.confirmPassword?.type === 'required' && <span className=\"error__message\">Confirm password is required</span>} \r\n                        {repeatPassword ? <span className=\"error__message\">Password mismatch</span>:null}\r\n                </label>  \r\n                <button type=\"submit\" form=\"hook-form\" className=\"login__btn__submit\">\r\n                    Register\r\n                </button>\r\n                \r\n            </form>\r\n                </div>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Register;","import React,{useState} from 'react';\r\nimport { useDispatch} from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nconst User = ()=>{\r\n\r\n    const [user,setUser] = useState(JSON.parse(localStorage.getItem(\"user\")))\r\n\r\n    const history = useHistory()\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const logoutUser = ()=>{\r\n        history.push(\"/login\")\r\n        dispatch({type: 'logout_user'})\r\n        history.go(0)\r\n    }  \r\n    return(\r\n        <div className=\"user\">\r\n           {user ? \r\n            <div className=\"user__conteiner\">\r\n                <span className=\"user__title\">User name : {user.name}</span>\r\n                <span className=\"user__email\">User email : {user.email}</span>\r\n                <button className=\"logout__bnt\" onClick={()=> logoutUser()}>log out</button>\r\n            </div>\r\n           :null}\r\n        </div>\r\n    )\r\n}\r\nexport default User;","import React,{useState,useEffect} from \"react\";\r\nimport Header from \"./header.jsx\"\r\nimport Login from \"./login.jsx\"\r\nimport Register from \"./register.jsx\"\r\nimport User from \"./user.jsx\"\r\nimport {BrowserRouter as Router,Switch,Route,Redirect} from \"react-router-dom\";\r\nconst Wrapper = ()=>{\r\n\r\n    const [user,setUser] = useState(JSON.parse(localStorage.getItem(\"user\")) || {})\r\n\r\n    const [auth,setAuth] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        if(Object.keys(user).length){\r\n            setAuth(true);\r\n            return\r\n        }\r\n        setAuth(false)\r\n    },[])\r\n\r\n    return(\r\n        <div className=\"wrapper\">\r\n            <div className=\"conteiner\">\r\n            <div className=\"content\">                      \r\n            <Router>\r\n                <Header/> \r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <Redirect to=\"/login\"/>\r\n                        </Route>\r\n                        <Route path=\"/login\">\r\n                            {auth ? <Redirect to=\"/user\"/>: <Login/>}                 \r\n                        </Route>\r\n                        <Route path=\"/register\">\r\n                            <Register/>\r\n                        </Route>\r\n                        <Route path=\"/user\">\r\n                            <User/>\r\n                        </Route>\r\n                    </Switch>\r\n            </Router>\r\n            </div>\r\n            </div>\r\n           \r\n    </div>\r\n    )\r\n}\r\nexport default Wrapper;","import React from 'react'\nimport Wrapper from \"./componets/wrapper.jsx\";\n\nconst App = ()=> {\n  return (\n    <div className=\"App\">\n        <Wrapper />      \n    </div>\n  );\n}\nexport default App;\n","import { createStore } from 'redux'\r\n\r\nconst defaultState = { \r\n    user: JSON.parse(localStorage.getItem(\"user\")) || {},\r\n    activeUser: false,\r\n}\r\n\r\nconst counterReducer = (state = defaultState, action)=>{\r\n    switch(action.type){    \r\n        case \"set_user\":\r\n            return {state, user: localStorage.setItem('user',JSON.stringify(action.payload))};\r\n        case \"logout_user\":\r\n            return {state, user: localStorage.removeItem('user')};\r\n        case \"active_user\":\r\n            return {state, activeUser: state.activeUser = action.payload}\r\n        default:\r\n          return state\r\n      }\r\n}\r\nlet store = createStore(counterReducer)\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport \"./style.css\"\nimport { Provider } from 'react-redux'\nimport store from './store/store.js';\n\nReactDOM.render(\n  < Provider store={store}>\n    <App />\n  </Provider>,\n \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}